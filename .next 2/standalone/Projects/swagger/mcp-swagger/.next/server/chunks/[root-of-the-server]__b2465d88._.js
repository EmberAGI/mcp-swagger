module.exports=[18622,(e,t,r)=>{t.exports=e.x("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js"))},56704,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/work-async-storage.external.js",()=>require("next/dist/server/app-render/work-async-storage.external.js"))},32319,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/work-unit-async-storage.external.js",()=>require("next/dist/server/app-render/work-unit-async-storage.external.js"))},20635,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/action-async-storage.external.js",()=>require("next/dist/server/app-render/action-async-storage.external.js"))},24725,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/after-task-async-storage.external.js",()=>require("next/dist/server/app-render/after-task-async-storage.external.js"))},70406,(e,t,r)=>{t.exports=e.x("next/dist/compiled/@opentelemetry/api",()=>require("next/dist/compiled/@opentelemetry/api"))},93695,(e,t,r)=>{t.exports=e.x("next/dist/shared/lib/no-fallback-error.external.js",()=>require("next/dist/shared/lib/no-fallback-error.external.js"))},61724,(e,t,r)=>{t.exports=e.x("next/dist/compiled/next-server/app-route-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-route-turbo.runtime.prod.js"))},4355,(e,t,r)=>{},12528,e=>{"use strict";e.s(["handler",()=>C,"patchFetch",()=>b,"routeModule",()=>E,"serverHooks",()=>y,"workAsyncStorage",()=>T,"workUnitAsyncStorage",()=>w],12528);var t=e.i(12401),r=e.i(36069),a=e.i(62270),s=e.i(7940),n=e.i(63538),o=e.i(13235),i=e.i(84229),l=e.i(54693),p=e.i(5828),u=e.i(40096),d=e.i(3190),c=e.i(11693),x=e.i(95315),h=e.i(57499),m=e.i(93695);e.i(78579);var g=e.i(6185);e.s(["GET",()=>v],34977);var R=e.i(57034);async function v(e){let t=e.nextUrl.searchParams.get("url");if(!t)return R.NextResponse.json({error:"URL parameter is required"},{status:400});try{console.log(`[URL Test] Testing URL: ${t}`);let e=await fetch(t,{method:"HEAD",headers:{"User-Agent":"MCP-Swagger-Test/1.0"}});console.log(`[URL Test] Response status: ${e.status}`),console.log("[URL Test] Response headers:",Object.fromEntries(e.headers.entries()));let r={url:t,status:e.status,statusText:e.statusText,headers:Object.fromEntries(e.headers.entries()),accessible:e.ok,supportsStreamableHTTP:!1,timestamp:new Date().toISOString()};try{let e=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json",Accept:"text/event-stream, application/json","User-Agent":"MCP-Swagger-Test/1.0"},body:JSON.stringify({jsonrpc:"2.0",method:"initialize",id:1,params:{protocolVersion:"2025-06-18",capabilities:{},clientInfo:{name:"mcp-swagger-test",version:"1.0.0"}}})});r.streamableHTTPTest={status:e.status,statusText:e.statusText,contentType:e.headers.get("content-type"),accessible:e.ok},r.supportsStreamableHTTP=e.ok&&((e.headers.get("content-type")?.includes("text/event-stream")??!1)||(e.headers.get("content-type")?.includes("application/json")??!1))}catch(e){r.streamableHTTPTest={status:0,statusText:"Error",contentType:null,accessible:!1,error:e instanceof Error?e.message:String(e)}}return R.NextResponse.json(r)}catch(e){return console.error(`[URL Test] Error testing ${t}:`,e),R.NextResponse.json({url:t,error:e instanceof Error?e.message:String(e),accessible:!1,timestamp:new Date().toISOString()})}}var f=e.i(34977);let E=new t.AppRouteRouteModule({definition:{kind:r.RouteKind.APP_ROUTE,page:"/api/test-url/route",pathname:"/api/test-url",filename:"route",bundlePath:""},distDir:".next",relativeProjectDir:"",resolvedPagePath:"[project]/Projects/swagger/mcp-swagger/src/app/api/test-url/route.ts",nextConfigOutput:"standalone",userland:f}),{workAsyncStorage:T,workUnitAsyncStorage:w,serverHooks:y}=E;function b(){return(0,a.patchFetch)({workAsyncStorage:T,workUnitAsyncStorage:w})}async function C(e,t,a){var R;let v="/api/test-url/route";v=v.replace(/\/index$/,"")||"/";let f=await E.prepare(e,t,{srcPage:v,multiZoneDraftMode:!1});if(!f)return t.statusCode=400,t.end("Bad Request"),null==a.waitUntil||a.waitUntil.call(a,Promise.resolve()),null;let{buildId:T,params:w,nextConfig:y,isDraftMode:b,prerenderManifest:C,routerServerContext:A,isOnDemandRevalidate:j,revalidateOnlyGenerated:P,resolvedPathname:S}=f,N=(0,o.normalizeAppPath)(v),O=!!(C.dynamicRoutes[N]||C.routes[S]);if(O&&!b){let e=!!C.routes[S],t=C.dynamicRoutes[N];if(t&&!1===t.fallback&&!e)throw new m.NoFallbackError}let U=null;!O||E.isDev||b||(U="/index"===(U=S)?"/":U);let k=!0===E.isDev||!O,q=O&&!k,H=e.method||"GET",_=(0,n.getTracer)(),I=_.getActiveScopeSpan(),M={params:w,prerenderManifest:C,renderOpts:{experimental:{cacheComponents:!!y.experimental.cacheComponents,authInterrupts:!!y.experimental.authInterrupts},supportsDynamicResponse:k,incrementalCache:(0,s.getRequestMeta)(e,"incrementalCache"),cacheLifeProfiles:null==(R=y.experimental)?void 0:R.cacheLife,isRevalidate:q,waitUntil:a.waitUntil,onClose:e=>{t.on("close",e)},onAfterTaskError:void 0,onInstrumentationRequestError:(t,r,a)=>E.onRequestError(e,t,a,A)},sharedContext:{buildId:T}},D=new i.NodeNextRequest(e),$=new i.NodeNextResponse(t),L=l.NextRequestAdapter.fromNodeNextRequest(D,(0,l.signalFromNodeResponse)(t));try{let o=async r=>E.handle(L,M).finally(()=>{if(!r)return;r.setAttributes({"http.status_code":t.statusCode,"next.rsc":!1});let a=_.getRootSpanAttributes();if(!a)return;if(a.get("next.span_type")!==p.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${a.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let s=a.get("next.route");if(s){let e=`${H} ${s}`;r.setAttributes({"next.route":s,"http.route":s,"next.span_name":e}),r.updateName(e)}else r.updateName(`${H} ${e.url}`)}),i=async n=>{var i,l;let p=async({previousCacheEntry:r})=>{try{if(!(0,s.getRequestMeta)(e,"minimalMode")&&j&&P&&!r)return t.statusCode=404,t.setHeader("x-nextjs-cache","REVALIDATED"),t.end("This page could not be found"),null;let i=await o(n);e.fetchMetrics=M.renderOpts.fetchMetrics;let l=M.renderOpts.pendingWaitUntil;l&&a.waitUntil&&(a.waitUntil(l),l=void 0);let p=M.renderOpts.collectedTags;if(!O)return await (0,d.sendResponse)(D,$,i,M.renderOpts.pendingWaitUntil),null;{let e=await i.blob(),t=(0,c.toNodeOutgoingHttpHeaders)(i.headers);p&&(t[h.NEXT_CACHE_TAGS_HEADER]=p),!t["content-type"]&&e.type&&(t["content-type"]=e.type);let r=void 0!==M.renderOpts.collectedRevalidate&&!(M.renderOpts.collectedRevalidate>=h.INFINITE_CACHE)&&M.renderOpts.collectedRevalidate,a=void 0===M.renderOpts.collectedExpire||M.renderOpts.collectedExpire>=h.INFINITE_CACHE?void 0:M.renderOpts.collectedExpire;return{value:{kind:g.CachedRouteKind.APP_ROUTE,status:i.status,body:Buffer.from(await e.arrayBuffer()),headers:t},cacheControl:{revalidate:r,expire:a}}}}catch(t){throw(null==r?void 0:r.isStale)&&await E.onRequestError(e,t,{routerKind:"App Router",routePath:v,routeType:"route",revalidateReason:(0,u.getRevalidateReason)({isRevalidate:q,isOnDemandRevalidate:j})},A),t}},m=await E.handleResponse({req:e,nextConfig:y,cacheKey:U,routeKind:r.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:C,isRoutePPREnabled:!1,isOnDemandRevalidate:j,revalidateOnlyGenerated:P,responseGenerator:p,waitUntil:a.waitUntil});if(!O)return null;if((null==m||null==(i=m.value)?void 0:i.kind)!==g.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==m||null==(l=m.value)?void 0:l.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,s.getRequestMeta)(e,"minimalMode")||t.setHeader("x-nextjs-cache",j?"REVALIDATED":m.isMiss?"MISS":m.isStale?"STALE":"HIT"),b&&t.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let R=(0,c.fromNodeOutgoingHttpHeaders)(m.value.headers);return(0,s.getRequestMeta)(e,"minimalMode")&&O||R.delete(h.NEXT_CACHE_TAGS_HEADER),!m.cacheControl||t.getHeader("Cache-Control")||R.get("Cache-Control")||R.set("Cache-Control",(0,x.getCacheControlHeader)(m.cacheControl)),await (0,d.sendResponse)(D,$,new Response(m.value.body,{headers:R,status:m.value.status||200})),null};I?await i(I):await _.withPropagatedContext(e.headers,()=>_.trace(p.BaseServerSpan.handleRequest,{spanName:`${H} ${e.url}`,kind:n.SpanKind.SERVER,attributes:{"http.method":H,"http.target":e.url}},i))}catch(t){if(I||t instanceof m.NoFallbackError||await E.onRequestError(e,t,{routerKind:"App Router",routePath:N,routeType:"route",revalidateReason:(0,u.getRevalidateReason)({isRevalidate:q,isOnDemandRevalidate:j})}),O)throw t;return await (0,d.sendResponse)(D,$,new Response(null,{status:500})),null}}}];

//# sourceMappingURL=%5Broot-of-the-server%5D__b2465d88._.js.map